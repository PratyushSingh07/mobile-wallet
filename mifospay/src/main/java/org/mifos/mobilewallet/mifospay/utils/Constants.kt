package org.mifos.mobilewallet.mifospay.utils

import org.mifos.mobilewallet.mifospay.R

/**
 * Created by naman on 17/6/17.
 */
object Constants {
    const val BASIC = "Basic "
    const val CLIENT_ID = "client_id"
    const val ACCOUNT_ID = "account_id"
    const val ACCOUNT = "account"
    const val TO_EXTERNAL_ID = "to_external_id"
    const val RUPEE = "â‚¹"
    const val QR_DATA = "qr_data"
    const val MERCHANT_NAME = "merchant_name"
    const val MERCHANT_VPA = "merchant_vpa"
    const val MERCHANT_ACCOUNT_NO = "merchant_account_no"
    const val FILE = "file"
    const val MULTIPART_FORM_DATA = "multipart/form-data"
    const val CHOOSE_A_FILE_TO_UPLOAD = "Choose a file to upload."
    const val ERROR_UPLOADING_DOCS = "Error uploading docs."
    const val KYC_LEVEL_2_DOCUMENTS_ADDED_SUCCESSFULLY = "KYC Level 2 documents added successfully."
    const val IMAGE = "image/*"
    const val APPLICATION_PDF = "application/pdf"
    const val ERROR_ADDING_KYC_LEVEL_1_DETAILS = "Error adding KYC Level 1 details."
    const val KYC_LEVEL_1_DETAILS_ADDED_SUCCESSFULLY = "KYC Level 1 details added successfully."
    const val PLEASE_WAIT = "Please wait.."
    const val COMPLETE_KYC = "Complete KYC"
    const val NEED_EXTERNAL_STORAGE_PERMISSION_TO_BROWSE_DOCUMENTS =
        "Need external storage permission to browse documents."
    const val CHOOSE_FILE = "Choose File"
    const val KYC_REGISTRATION_LEVEL_2 = "KYC Registration Level 2"
    const val KYC_REGISTRATION_LEVEL_1 = "KYC Registration Level 1"
    const val DD_MM_YY = "dd/MM/yy"
    const val ERROR_DELETING_CARD = "Error deleting card."
    const val CARD_DELETED_SUCCESSFULLY = "Card deleted successfully."
    const val DELETING_CARD = "Deleting Card.."
    const val ERROR_UPDATING_CARD = "Error updating card."
    const val CARD_UPDATED_SUCCESSFULLY = "Card updated successfully."
    const val INVALID_CREDIT_CARD_NUMBER = "Invalid Credit Card Number"
    const val UPDATING_CARD = "Updating Card.."
    const val ERROR_ADDING_CARD = "Error adding card."
    const val CARD_ADDED_SUCCESSFULLY = "Card added successfully."
    const val ADDING_CARD = "Adding Card.."
    const val ADD_CARD_DIALOG = "Add Card Dialog"
    const val EDIT_CARD_DIALOG = "Edit Card Dialog"
    const val SAVED_CARDS = "Saved Cards"
    const val UPDATE = "Update"
    const val KYC_REGISTRATION_LEVEL_3 = "KYC Registration Level 3"
    const val OK = "OK"
    const val SCAN_CODE = "Scan code"
    const val QR_CODE = "QR code"
    const val FAILED_TO_WRITE_DATA_TO_QR = "Failed to write data to qr"
    const val ERROR_OCCURRED = "Error occurred"
    const val LOGGING_IN = "Logging in.."
    const val HOME = "Home"
    const val PROFILE = "Profile"
    const val ERROR_FETCHING_BALANCE = "Error fetching balance"
    const val UNABLE_TO_PROCESS_TRANSFER = "Unable to process transfer"
    const val TRANSACTION_SUCCESSFUL = "Transaction successful"
    const val SENDING_MONEY = "Sending money..."
    const val INSUFFICIENT_BALANCE = "Insufficient balance"
    const val ERROR_FINDING_VPA = "Error finding Virtual Payment Address"
    const val ERROR_FINDING_MOBILE_NUMBER = "Error finding Mobile Number"
    const val PLEASE_ENTER_VALID_AMOUNT = "Please enter a valid amount"
    const val VPA_VALIDATION_REGEX = "^\\w.+@\\w+$"
    const val SELF_ACCOUNT_ERROR = "Self Account transfer is not allowed"
    const val PLEASE_ENTER_AMOUNT = "Please enter a valid amount before making the transfer"
    const val NEED_READ_CONTACTS_PERMISSION = "Need read contacts permission"
    const val NEED_CAMERA_PERMISSION_TO_SCAN_QR_CODE = "Need camera permission to scan qr code."
    const val ERROR_CHOOSING_CONTACT = "Error choosing contact"
    const val MAKE_TRANSFER_FRAGMENT = "Make Transfer Fragment"
    const val PLEASE_ENTER_ALL_THE_FIELDS = "Please enter all the fields"
    const val TRANSFER = "Transfer"
    const val TRANSACTION_DETAILS = "Transaction Details"
    const val ACCOUNT_NUMBER = "Account Number : "
    const val TRANSACTION = "transaction"
    const val TRANSACTIONS_HISTORY = "Transactions History History"
    const val SPECIFIC_TRANSACTIONS = "Specific Transactions History"
    const val HISTORY_NOT_AVAILABLE = "No Transaction History Available"
    const val RECEIPT_DOMAIN = "https://receipt.mifospay.com/"
    const val OTHER = "Other"
    const val CREDIT = "Credit"
    const val DEBIT = "Debit"
    const val RECEIPT_ID = "Receipt ID"
    const val DATE = "Date"
    const val TRANSACTION_ID = "Transaction ID"
    val TRANSACTIONS = "transactions"
    val ERROR_FETCHING_TRANSACTIONS = "Error fetching transactions"
    val TRANSFER_DETAILS = "transfer details"
    val UNIQUE_PAYMENT_LINK_COPIED_TO_CLIPBOARD = "Unique Payment Link copied to clipboard"
    val UNIQUE_PAYMENT_LINK = "Unique Payment Link"
    val STATUS = "Status"
    val UNIQUE_RECEIPT_LINK_COPIED_TO_CLIPBOARD = "Unique Receipt Link copied to clipboard"
    val UNIQUE_RECEIPT_LINK = "Unique Receipt Link"
    val DONE = "Done"
    val PENDING = "Pending"
    val ITEMS = "Item(s)"
    val AMOUNT = "Amount"
    val INR = "INR"
    val CONSUMER = "Consumer"
    val MERCHANT = "Merchant"
    val INVOICE = "Invoice"
    val NEED_EXTERNAL_STORAGE_PERMISSION_TO_DOWNLOAD_RECEIPT =
        "Need external storage permission to download receipt"
    val RECEIPT_DOWNLOADED_SUCCESSFULLY = "Receipt Downloaded Successfully"
    val ERROR_DOWNLOADING_RECEIPT = "Error downloading receipt"
    @JvmField
    val MIFOSPAY = "mifospay"
    val RECEIPT = "Receipt"
    val PDF = ".pdf"
    val ERROR_FETCHING_RECEIPT = "Error fetching receipt"
    val INVOICE_DOMAIN = "https://invoice.mifospay.com/"
    val SENDING_OTP_TO_YOUR_MOBILE_NUMBER = "Sending OTP to your mobile number.."
    val MOBILE_NUMBER = "Mobile Number"
    val COUNTRY = "Country"
    val GOOGLE_SIGN_IN_FAILED = "Google Sign in failed."
    val GOOGLE_GIVEN_NAME = "GOOGLE_GIVEN_NAME"
    val GOOGLE_FAMILY_NAME = "GOOGLE_FAMILY_NAME"
    val GOOGLE_EMAIL = "GOOGLE_EMAIL"
    val GOOGLE_DISPLAY_NAME = "GOOGLE_DISPLAY_NAME"
    val GOOGLE_PHOTO_URI = "GOOGLE_PHOTO_URI"
    val CHOOSE_SIGNUP_METHOD = "Choose Signup Method"
    val LOGGING_OUT = "Logging out..."
    val NEED_EXTERNAL_STORAGE_PERMISSION_TO_BROWSE_IMAGES =
        "Need external storage permission to browse images"
    val SETTINGS = "Settings"
    val EDIT_PROFILE = "Edit Profile"
    val FAQ = "Frequent Asked Questions"
    val LINKED_BANK_ACCOUNTS = "Linked Bank Accounts"
    val BANK_ACCOUNT_DETAILS = "Bank Account Details"
    val NEW_BANK_ACCOUNT = "newBankAccount"
    val VERIFYING_MOBILE_NUMBER = "Verifying mobile number.."
    val MIFOS_SAVINGS_PRODUCT_ID = "Mifos Savings Product Id"
    val MERCHANTS = "Merchants"
    val UPI_PIN = "UPI PIN"
    val STEP = "step"
    val TYPE = "Type"
    val SETUP = "Setup"
    val BANK_DELETED_SUCCESSFULLY = "Bank deleted successfully"
    val ERROR_OCCURRED_WHILE_CHANGING_UPI_PIN = "Error occurred while changing UPI PIN"
    val SETUP_UPI = "Setup UPI"
    val ERROR_WHILE_SETTING_UP_UPI_PIN = "Error while setting up UPI PIN"
    val UPI_PIN_SETUP_COMPLETED_SUCCESSFULLY = "UPI PIN Setup Completed Successfully"
    val FORGOT = "Forgot"
    val CHANGE = "Change"
    val OTP = "otp"
    val SETUP_UPI_PIN = "Setup UPI PIN"
    val SETTING_UP_UPI_PIN = "Setting up UPI PIN.."
    val UPDATED_BANK_ACCOUNT = "Updated Bank Account"
    val INDEX = "Index"
    val CHANGE_UPI_PIN = "Change UPI PIN"
    val FORGOT_UPI_PIN = "Forgot UPI PIN"

    // broadcast receiver intent filters
    val REGISTRATION_COMPLETE = "registrationComplete"
    val PUSH_NOTIFICATION = "pushNotification"

    // id to handle the notification in the notification tray
    @JvmField
    val NOTIFICATION_ID = 100
    @JvmField
    val NOTIFICATION_ID_BIG_IMAGE = 101
    val HOME_HISTORY_TRANSACTIONS_LIMIT = 5
    val ERROR_FIELDS_CANNOT_BE_EMPTY = "Fields cannot be empty"
    val ERROR_VALIDATING_PASSWORD = "Passwords are not the same"
    val ERROR_PASSWORDS_CANT_BE_SAME = "New password can't be the same as old password."
    val CHANGE_PROFILE_IMAGE_KEY = "CHANGE_PROFILE_IMAGE_KEY"
    val CHANGE_PROFILE_IMAGE_VALUE = "CHANGE_PROFILE_IMAGE_VALUE"
    val TAP_TO_REVEAL = "Tap to Reveal"
    val NAME = "Name : "
    val ERROR_FETCHING_TRANSACTION_DETAILS = "Error fetching details"
    val WHITE_BACK_BUTTON = R.drawable.ic_arrow_back_white_24dp
    val BLACK_BACK_BUTTON = R.drawable.ic_arrow_back_black_24dp
    val VIEW = "View"
    val CURRENT_PASSCODE = "current passcode"
    val UPDATE_PASSCODE = "update passcode"
    val SELECT_DATE = "SELECT DATE"
    val SI_ID = "standing_instruction_id"
    val UNAUTHORIZED_ERROR = "401 Unauthorized"
    val RECEIPT_SHARING_MESSAGE = "Receipt link for the transaction "
    val TO = " to "
    val COLON = " : "
}
